// Generated by Dagger (https://dagger.dev).
package com.example.irentmovie.data;

import com.example.irentmovie.data.repositories.PostRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class DatabaseModule_ProvidePostRepositoryFactory implements Factory<PostRepository> {
  private final Provider<AppDatabase> databaseProvider;

  public DatabaseModule_ProvidePostRepositoryFactory(Provider<AppDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public PostRepository get() {
    return providePostRepository(databaseProvider.get());
  }

  public static DatabaseModule_ProvidePostRepositoryFactory create(
      Provider<AppDatabase> databaseProvider) {
    return new DatabaseModule_ProvidePostRepositoryFactory(databaseProvider);
  }

  public static PostRepository providePostRepository(AppDatabase database) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.providePostRepository(database));
  }
}
