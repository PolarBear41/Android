// Generated by Dagger (https://dagger.dev).
package com.example.irentmovie.ui.profile;

import com.example.irentmovie.data.repositories.PostRepository;
import com.example.irentmovie.data.repositories.UserRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class ProfileViewModel_Factory implements Factory<ProfileViewModel> {
  private final Provider<PostRepository> postRepositoryProvider;

  private final Provider<UserRepository> userRepositoryProvider;

  public ProfileViewModel_Factory(Provider<PostRepository> postRepositoryProvider,
      Provider<UserRepository> userRepositoryProvider) {
    this.postRepositoryProvider = postRepositoryProvider;
    this.userRepositoryProvider = userRepositoryProvider;
  }

  @Override
  public ProfileViewModel get() {
    return newInstance(postRepositoryProvider.get(), userRepositoryProvider.get());
  }

  public static ProfileViewModel_Factory create(Provider<PostRepository> postRepositoryProvider,
      Provider<UserRepository> userRepositoryProvider) {
    return new ProfileViewModel_Factory(postRepositoryProvider, userRepositoryProvider);
  }

  public static ProfileViewModel newInstance(PostRepository postRepository,
      UserRepository userRepository) {
    return new ProfileViewModel(postRepository, userRepository);
  }
}
